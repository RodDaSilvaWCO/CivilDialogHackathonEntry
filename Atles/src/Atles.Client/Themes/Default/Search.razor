@inherits Atles.Client.Components.Themes.SearchComponent

@if (Model == null)
{
    <Loading />
}
else
{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">@Loc["Home"]</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Loc["Search"]</li>
        </ol>
    </nav>

    <h3 class="mb-3">@Loc["Search"]</h3>

    <div class="row">
        <div class="col-md-8 input-group mb-3">
            <input type="text" class="form-control" placeholder="@Loc["Search all posts"]" @bind-value="SearchTerm" @bind-value:event="oninput" @onkeyup="MyKeyUpAsync">
            <button class="btn bg-transparent text-secondary" style="margin-left: -40px; z-index: 100;" @onclick="@(async () => await ClearSearchAsync())">
                <i class="fa fa-times"></i>
            </button>
            <div class="input-group-append">
                <button class="btn btn-secondary" type="button" @onclick="@(async () => await SearchAsync())">
                    <i class="fa fa-search"></i>
                </button>
            </div>
        </div>
    </div>

    <a id="posts"></a>

    @if (Model.Posts == null)
    {
        <Loading />
    }
    else
    {
        @if (Model.Posts.Items.Count == 0)
        {
            <NoRecords Text="@Loc["No posts found for current search."]" />
        }
        else
        {
            <div class="card">
                <ul class="list-group list-group-flush">
                    @foreach (var post in Model.Posts.Items)
                    {
                        <li class="list-group-item py-3">
                            <div class="card-text">
                                @if (post.IsTopic)
                                {
                                    <a href="@Url.Topic(post.ForumSlug, post.Slug)">@post.Title</a>
                                }
                                else
                                {
                                    <a href="@Url.Topic(post.ForumSlug, post.Slug)">@Loc["RE"]: @post.Title</a>
                                }
                            </div>
                            <div class="card-text">
                                @((MarkupString)post.Content.ToSafeLengthText(150))
                            </div>
                            <div class="row small">
                                <div class="col-md-12">
                                    @((MarkupString)string.Format(Loc["By {0} on {1} in {2}"],
                                    $"<a href=\"/user/{post.UserId}\">{post.UserDisplayName}</a>",
                                    $"{post.TimeStamp.ToShortDateString()} {post.TimeStamp.ToShortTimeString()}",
                                    $"<a href=\"{Url.Forum(post.ForumSlug)}\">{post.ForumName}</a>"))
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        }

        <div class="mt-3">
            <Pager @ref="Pager" CurrentPage="@CurrentPage" TotalPages="@TotalPages" OnLoadDataCallback="@ChangePageAsync"></Pager>
        </div>
    }
}