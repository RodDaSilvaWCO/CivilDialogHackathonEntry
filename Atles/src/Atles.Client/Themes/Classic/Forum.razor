@inherits Atles.Client.Components.Themes.ForumComponent

@if (Model == null)
{
    <Loading />
}
else
{
    if (DisplayPage)
    {
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">@Loc["Home"]</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.Forum.Name</li>
            </ol>
        </nav>

        <div class="row">
            <div class="col-md-6">
                <h4>@Model.Forum.Name</h4>
                <div class="mb-3">@Model.Forum.Description</div>
            </div>
            <div class="col-md-6 text-right mb-3">
                @if (Model.CanStart)
                {
                    <a href="/forum/@Model.Forum.Id/post" class="btn btn-primary" role="button">@Loc["New Topic"]</a>
                }
                else
                {
                    <AuthorizeView>
                        <Authorized>
                            <i class="fas fa-comment-slash mr-1"></i>
                            @Loc["You are not authorized to start a new discussion"]
                        </Authorized>
                        <NotAuthorized>
                            <i class="fas fa-sign-in-alt mr-1"></i>
                            @((MarkupString)string.Format(Loc["{0} to start a new discussion"], $"<a href=\"authentication/login?returnUrl={Uri.EscapeDataString(Navigation.Uri)}\">{Loc["Login"]}</a>"))
                        </NotAuthorized>
                    </AuthorizeView>
                }
            </div>
        </div>

        <a id="topics"></a>

        <div class="row">
            <div class="col-md-6 input-group mb-3">
                <input type="text" class="form-control" placeholder="@string.Format(Loc["Search topics in {0}"], Model.Forum.Name)" @bind-value="Search" @bind-value:event="oninput" @onkeyup="MyKeyUpAsync">
                <button class="btn bg-transparent text-secondary" style="margin-left: -40px; z-index: 100;" @onclick="@(async () => await ClearSearchAsync())">
                    <i class="fa fa-times"></i>
                </button>
                <div class="input-group-append">
                    <button class="btn btn-secondary" type="button" @onclick="@(async () => await SearchAsync())">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </div>

        @if (Model.Topics == null)
        {
            <Loading />
        }
        else
        {
            @if (Model.Topics.Items.Count == 0)
            {
                <NoRecords Text="@Loc["No topics found for this forum."]" />
            }
            else
            {
                <table class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th scope="col"class="w-auto"></th>
                            <th scope="col" class="w-75">@Loc["Title"]</th>
                            <th scope="col" class="w-auto text-center">@Loc["Replies"]</th>
                            <th scope="col" class="w-25">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Topics.Items)
                        {
                            <tr>
                                <td>
                                    <a href="/user/@item.UserId" title="@item.UserDisplayName">
                                        <Avatar GravatarHash="@item.GravatarHash" GravatarSize="32" Class="mb-2"></Avatar>
                                    </a>
                                </td>
                                <td>
                                    <div>
                                        @if (item.Pinned)
                                        {
                                            <i class="fas fa-thumbtack mr-2"></i>
                                        }
                                        @if (item.Locked)
                                        {
                                            <i class="fas fa-lock mr-2"></i>
                                        }
                                        @if (Model.CanRead)
                                        {
                                            <a href="/forum/@Model.Forum.Slug/@item.Slug" title="@item.Title">@item.Title.ToSafeLengthText(50)</a>
                                        }
                                        else
                                        {
                                            <span title="@item.Title"></span>@item.Title.ToSafeLengthText(50)
                                        }
                                    </div>
                                    <div class="small">
                                        @item.TimeStamp.ToAppLocalDateAndTime()
                                    </div>                                   
                                </td>
                                <td class="text-center">@item.TotalReplies</td>
                                <td class="small">
                                    @((MarkupString)string.Format(Loc["Latest by {0} on {1}"],
                                        $"<a href=\"/user/{item.MostRecentUserId}\" title=\"{item.MostRecentUserDisplayName}\">{item.MostRecentUserDisplayName.ToSafeLengthText(10)}</a>",
                                        item.MostRecentTimeStamp.ToAppLocalDateAndTime()))
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <div class="mt-3">
                    <Pager TotalPages="@Model.Topics.TotalPages" CurrentPage="@CurrentPage" OnLoadDataCallback="@ChangePageAsync"></Pager>
                </div>
            }
        }
    }
    else
    {
        <SomethingWrong />
    }
}